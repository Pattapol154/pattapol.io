{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\TAM\\\\Desktop\\\\chakra-ui-app\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          \", \";\\n\\n          ::selection {\\n            background-color: #47a3f3;\\n            color: #fefefe;\\n          }\\n\\n          html {\\n            min-width: 360px;\\n            height: -webkit-fill-available;\\n            scroll-behavior: smooth;\\n          }\\n\\n          ::-webkit-scrollbar {\\n            height: 0px;\\n            width: 0px;\\n            background: transparent;\\n          }\\n\\n          #__next {\\n            display: flex;\\n            flex-direction: column;\\n            min-height: 100vh;\\n            background: \", \";\\n          }\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { ThemeProvider, CSSReset, ColorModeProvider, useColorMode } from \"@chakra-ui/core\";\nimport { Global, css } from \"@emotion/core\";\nimport { DefaultSeo } from \"next-seo\";\nimport SEO from \"../next-seo.config\";\nimport { prismLightTheme, prismDarkTheme } from \"../styles/prism\";\nimport theme from \"../styles/theme\";\n\nvar GlobalStyle = function GlobalStyle(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  return __jsx(React.Fragment, null, __jsx(CSSReset, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), __jsx(Global, {\n    styles: css(_templateObject(), colorMode === \"light\" ? prismLightTheme : prismDarkTheme, colorMode === \"light\" ? \"#ffffff\" : \"#171923\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), children);\n};\n\n_s(GlobalStyle, \"2Uu86IH3do63pkN3s1ysdRMmJuc=\", false, function () {\n  return [useColorMode];\n});\n\n_c = GlobalStyle;\n\nvar App = function App(_ref2) {\n  var Component = _ref2.Component,\n      pageProps = _ref2.pageProps;\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(ColorModeProvider, {\n    value: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(GlobalStyle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(DefaultSeo, _extends({}, SEO, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })), __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/TAM/Desktop/chakra-ui-app/pages/_app.js"],"names":["React","ThemeProvider","CSSReset","ColorModeProvider","useColorMode","Global","css","DefaultSeo","SEO","prismLightTheme","prismDarkTheme","theme","GlobalStyle","children","colorMode","App","Component","pageProps"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,QAFF,EAGEC,iBAHF,EAIEC,YAJF,QAKO,iBALP;AAMA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,eAA5B;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,iBAAhD;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,sBACdT,YAAY,EADE;AAAA,MAC5BU,SAD4B,iBAC5BA,SAD4B;;AAGpC,SACE,4BACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AACE,IAAA,MAAM,EAAER,GAAF,oBACFQ,SAAS,KAAK,OAAd,GAAwBL,eAAxB,GAA0CC,cADxC,EAwBYI,SAAS,KAAK,OAAd,GAAwB,SAAxB,GAAoC,SAxBhD,CADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EA+BGD,QA/BH,CADF;AAmCD,CAtCD;;GAAMD,W;UACkBR,Y;;;KADlBQ,W;;AAwCN,IAAMG,GAAG,GAAG,SAANA,GAAM,QAA8B;AAAA,MAA3BC,SAA2B,SAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,SAAhBA,SAAgB;AACxC,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD,eAAgBH,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE,MAAC,SAAD,eAAeS,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,CADJ,CADF;AAUD,CAXD;;MAAMF,G;AAaN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport {\n  ThemeProvider,\n  CSSReset,\n  ColorModeProvider,\n  useColorMode,\n} from \"@chakra-ui/core\";\nimport { Global, css } from \"@emotion/core\";\nimport { DefaultSeo } from \"next-seo\";\nimport SEO from \"../next-seo.config\";\nimport { prismLightTheme, prismDarkTheme } from \"../styles/prism\";\nimport theme from \"../styles/theme\";\n\nconst GlobalStyle = ({ children }) => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <>\n      <CSSReset />\n      <Global\n        styles={css`\n          ${colorMode === \"light\" ? prismLightTheme : prismDarkTheme};\n\n          ::selection {\n            background-color: #47a3f3;\n            color: #fefefe;\n          }\n\n          html {\n            min-width: 360px;\n            height: -webkit-fill-available;\n            scroll-behavior: smooth;\n          }\n\n          ::-webkit-scrollbar {\n            height: 0px;\n            width: 0px;\n            background: transparent;\n          }\n\n          #__next {\n            display: flex;\n            flex-direction: column;\n            min-height: 100vh;\n            background: ${colorMode === \"light\" ? \"#ffffff\" : \"#171923\"};\n          }\n        `}\n      />\n      {children}\n    </>\n  );\n};\n\nconst App = ({ Component, pageProps }) => {\n  return (\n    <ThemeProvider theme={theme}>\n        <ColorModeProvider value=\"light\">\n          <GlobalStyle>\n            <DefaultSeo {...SEO} />\n            <Component {...pageProps} />\n          </GlobalStyle>\n        </ColorModeProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}